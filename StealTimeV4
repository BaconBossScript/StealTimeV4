local a=string.char;local b=string.byte;local c=string.sub;local d=bit32 or bit;local e=d.bxor;local f=table.concat;local g=table.insert;local function h(i,j)local k={}for l=1,#i do g(k,a(e(b(c(i,l,l+1)),b(c(j,1+l%#j,1+l%#j+1)))%256))end;return f(k)end;local m=tonumber;local n=string.byte;local o=string.char;local p=string.sub;local q=string.gsub;local r=string.rep;local s=table.concat;local t=table.insert;local u=math.ldexp;local v=getfenv or function()return _ENV end;local w=setmetatable;local x=pcall;local y=select;local z=unpack or table.unpack;local A=tonumber;local function B(C,D,...)local E=1;local F;C=q(p(C,15-10),h("\174\170","\187\128\132\17\28\41\187"),function(G)if n(G,2)==79 then local H=0;while true do if 0==H then F=m(p(G,1,1))return""end end else local I=0;local J;while true do if I==0 then J=o(m(G,16))if F then local K=0;local L;while true do if K==0 then L=r(J,F)F=nil;K=1 end;if K==1 then return L end end else return J end;break end end end end)local function M(N,O,P)if P then local Q=0;local R;while true do if Q==0 then R=N/2^(O-1)%2^(P-1-(O-1)+2-1)return R-R%1 end end else local S=0;local T;while true do if S==0 then T=2^(O-1)return N%(T+T)>=T and 1 or 0 end end end end;local function U()local V=n(C,E,E)E=E+1;return V end;local function W()local X,Y=n(C,E,E+2)E=E+2;return Y*256+X end;local function Z()local _,a0,a1,a2=n(C,E,E+5-2)E=E+4;return a2*16777216+a1*65536+a0*256+_ end;local function a3()local a4=Z()local a5=Z()local a6=1;local a7=M(a5,1,20)*2^32+a4;local a8=M(a5,21,31)local a9=M(a5,32)==1 and-1 or 1;if a8==0 then if a7==0 then return a9*0 else a8=1;a6=0 end elseif a8==2047 then return a7==0 and a9*1/0 or a9*NaN end;return u(a9,a8-1023)*(a6+a7/(4-2)^52)end;local function aa(ab)local ac=0;local ad;local ae;while true do if ac==2 then ae={}for af=1,#ad do ae[af]=o(n(p(ad,af,af)))end;ac=3 end;if 3==ac then return s(ae)end;if ac==0 then ad=nil;if not ab then local ag=0;while true do if ag==0 then ab=Z()if ab==0 then return""end;break end end end;ac=1 end;if 1==ac then ad=p(C,E,E+ab-1)E=E+ab;ac=2 end end end;local ah=Z;local function ai(...)return{...},y("#",...)end;local function aj()local ak=0;local al;local am;local an;local ao;local ap;local aq;while true do if 1==ak then ap=Z()aq={}for ar=620-(555+64),ap do local as=U()local at;if as==1 then at=U()~=0 elseif as==2 then at=a3()elseif as==3 then at=aa()end;aq[ar]=at end;ao[3]=U()ak=2 end;if ak==2 then for au=1,Z()do local av=0;local aw;while true do if av==0 then aw=U()if M(aw,1,1)==0 then local ax=0;local ay;local az;local aA;while true do if ax==1 then aA={W(),W(),nil,nil}if ay==0 then aA[3]=W()aA[4]=W()elseif ay==1 then aA[3]=Z()elseif ay==2 then aA[3]=Z()-2^16 elseif ay==3 then local aB=0;while true do if aB==0 then aA[3]=Z()-2^16;aA[4]=W()break end end end;ax=2 end;if ax==3 then if M(az,3,3)==928-(214+713)then aA[4]=aq[aA[4]]end;al[au]=aA;break end;if ax==0 then ay=M(aw,2,3)az=M(aw,4,937-(857+74))ax=1 end;if 2==ax then if M(az,1,1)==1 then aA[2]=aq[aA[2]]end;if M(az,2,570-(367+201))==1 then aA[3]=aq[aA[3]]end;ax=3 end end end;break end end end;for aC=1+0,Z()do am[aC-(1+0)]=aj()end;return ao end;if ak==0 then al={}am={}an={}ao={al,am,nil,an}ak=1 end end end;local function aD(aE,aF,aG)local aH=0;local aI;local aJ;local aK;while true do if aH==0 then aI=aE[1]aJ=aE[2]aH=1 end;if aH==1 then aK=aE[3]return function(...)local aL=aI;local aM=aJ;local aN=aK;local aO=ai;local aP=1;local aQ=-(878-(282+595))local aR={}local aS={...}local aT=y("#",...)-1;local aU={}local aV={}for aW=0,aT do if aW>=aN then aR[aW-aN]=aS[aW+1]else aV[aW]=aS[aW+1638-(1523+114)]end end;local aX=aT-aN+1;local aY;local aZ;while true do aY=aL[aP]aZ=aY[1]if aZ<=49 then if aZ<=24 then if aZ<=11 then if aZ<=5 then if aZ<=2 then if aZ<=0 then local a_=aV[aY[4]]if a_ then aP=aP+1 else local b0=0;while true do if b0==0 then aV[aY[2]]=a_;aP=aY[3]break end end end elseif aZ==1 then aP=aY[3]else aG[aY[3]]=aV[aY[2+0]]end elseif aZ<=3 then aV[aY[2]]=aD(aM[aY[3-0]],nil,aG)elseif aZ>1069-(68+997)then local b1=0;local b2;while true do if b1==0 then b2=aY[2]aV[b2]=aV[b2]()break end end else aV[aY[2]]()end elseif aZ<=8 then if aZ<=6 then do return aV[aY[1272-(226+1044)]]()end elseif aZ>7 then aV[aY[2]]={}else local b3=aY[2]local b4,b5=aO(aV[b3](z(aV,b3+1,aQ)))aQ=b5+b3-1;local b6=0;for b7=b3,aQ do b6=b6+1;aV[b7]=b4[b6]end end elseif aZ<=9 then if aY[8-6]==aV[aY[4]]then aP=aP+1 else aP=aY[3]end elseif aZ==10 then aV[aY[2]]=#aV[aY[3]]else aV[aY[2]][aY[120-(32+85)]]=aV[aY[4+0]]end elseif aZ<=17 then if aZ<=14 then if aZ<=12 then local b8=aY[2]local b9=aY[4]local ba=b8+2;local bb={aV[b8](aV[b8+1],aV[ba])}for bc=1,b9 do aV[ba+bc]=bb[bc]end;local bd=bb[1]if bd then local be=0;while true do if 0==be then aV[ba]=bd;aP=aY[3]break end end else aP=aP+1 end elseif aZ>13 then aV[aY[2]][aV[aY[3]]]=aY[4]else aV[aY[2]][aY[1+2]]=aV[aY[4]]end elseif aZ<=15 then local bf=aY[2]local bg,bh=aO(aV[bf](aV[bf+958-(892+65)]))aQ=bh+bf-1;local bi=0;for bj=bf,aQ do local bk=0;while true do if bk==0 then bi=bi+1;aV[bj]=bg[bi]break end end end elseif aZ==16 then aV[aY[2]]=aG[aY[3]]else aV[aY[2]]=aV[aY[3]]%aV[aY[4]]end elseif aZ<=20 then if aZ<=18 then aV[aY[2]]=#aV[aY[7-4]]elseif aZ==19 then if aY[2]<aV[aY[4]]then aP=aP+1 else aP=aY[3]end else local bl=aY[2]local bm=aV[aY[3]]aV[bl+1-0]=bm;aV[bl]=bm[aY[4]]end elseif aZ<=22 then if aZ>21 then if aY[2]==aV[aY[4]]then aP=aP+1 else aP=aY[3]end else local bn=aY[2]aV[bn](aV[bn+1])end elseif aZ==23 then local bo=aM[aY[3]]local bp;local bq={}bp=w({},{[h("\98\62\59\11\89\4\42","\101\61\97\82")]=function(br,bs)local bt=bq[bs]return bt[1][bt[2]]end,[h("\129\54\162\43\45\183\7\168\43\34","\90\222\105\204\78")]=function(bu,bv,bw)local bx=bq[bv]bx[1][bx[3-1]]=bw end})for by=1,aY[4]do local bz=0;local bA;while true do if 0==bz then aP=aP+1;bA=aL[aP]bz=1 end;if bz==1 then if bA[1]==401-(87+263)then bq[by-1]={aV,bA[3]}else bq[by-1]={aF,bA[3]}end;aU[#aU+1]=bq;break end end end;aV[aY[2]]=aD(bo,bp,aG)else aV[aY[2]]=aF[aY[3]]end elseif aZ<=88-52 then if aZ<=23+7 then if aZ<=27 then if aZ<=25 then local bB=0;local bC;local bD;local bE;local bF;while true do if bB==1 then aQ=bE+bC-1;bF=0;bB=2 end;if bB==2 then for bG=bC,aQ do local bH=0;while true do if bH==0 then bF=bF+1;aV[bG]=bD[bF]break end end end;break end;if bB==0 then bC=aY[2]bD,bE=aO(aV[bC](aV[bC+1]))bB=1 end end elseif aZ>103-77 then aV[aY[2]]=aY[3]+aV[aY[4]]else local bI=0;local bJ;local bK;local bL;local bM;while true do if bI==2 then for bN=bJ,aQ do bM=bM+1;aV[bN]=bK[bM]end;break end;if bI==1 then aQ=bL+bJ-1;bM=0;bI=2 end;if bI==0 then bJ=aY[954-(802+150)]bK,bL=aO(aV[bJ](z(aV,bJ+1,aQ)))bI=1 end end end elseif aZ<=75-47 then aV[aY[2]]=aY[3]elseif aZ==52-23 then aV[aY[2]]=aV[aY[3]]+aY[4]else local bO=0;local bP;local bQ;while true do if bO==0 then bP=aY[2]bQ=aV[bP]bO=1 end;if bO==1 then for bR=bP+1+0,aQ do t(bQ,aV[bR])end;break end end end elseif aZ<=1030-(915+82)then if aZ<=31 then aG[aY[8-5]]=aV[aY[2]]elseif aZ==32 then local bS=0;local bT;local bU;local bV;while true do if bS==0 then bT=aY[2]bU={aV[bT](aV[bT+1])}bS=1 end;if bS==1 then bV=0;for bW=bT,aY[4]do local bX=0;while true do if bX==0 then bV=bV+1;aV[bW]=bU[bV]break end end end;break end end else local bY=0;local bZ;while true do if bY==0 then bZ=aY[2]aV[bZ]=aV[bZ](aV[bZ+1])break end end end elseif aZ<=20+14 then aV[aY[2]]=aF[aY[3]]elseif aZ>35 then local b_=aY[2]do return aV[b_](z(aV,b_+1,aY[3]))end else local c0=0;local c1;while true do if c0==0 then c1=aY[2]do return aV[c1](z(aV,c1+1,aY[3]))end;break end end end elseif aZ<=54-12 then if aZ<=39 then if aZ<=37 then if aV[aY[2]]then aP=aP+1188-(1069+118)else aP=aY[3]end elseif aZ==38 then for c2=aY[2],aY[3]do aV[c2]=nil end else aV[aY[4-2]]=aV[aY[3]][aV[aY[4]]]end elseif aZ<=40 then if aV[aY[3-1]]==aY[1+3]then aP=aP+1-0 else aP=aY[3]end elseif aZ==41 then local c3=aY[2]aV[c3](z(aV,c3+1,aY[3]))else local c4=0;local c5;while true do if c4==0 then c5=aY[2]aV[c5]=aV[c5](z(aV,c5+1,aQ))break end end end elseif aZ<=45 then if aZ<=43 then aV[aY[2]][aV[aY[3]]]=aV[aY[4]]elseif aZ>44 then local c6=0;local c7;while true do if c6==0 then c7=aY[2+0]aV[c7](z(aV,c7+792-(368+423),aQ))break end end else local c8=aY[2]aV[c8](z(aV,c8+1,aQ))end elseif aZ<=47 then if aZ>144-98 then local c9=0;local ca;while true do if c9==0 then ca=aY[2]aV[ca]=aV[ca](aV[ca+1])break end end else aV[aY[2]]={}end elseif aZ>48 then aV[aY[2]]=aG[aY[3]]else aV[aY[2]]=aV[aY[3]]+aY[4]end elseif aZ<=74 then if aZ<=61 then if aZ<=55 then if aZ<=52 then if aZ<=50 then local cb=aY[2]do return z(aV,cb,aQ)end elseif aZ==51 then aV[aY[2]]=aV[aY[3]]else aV[aY[2]][aY[3]]=aY[4]end elseif aZ<=53 then aV[aY[2]][aY[3]]=aY[4]elseif aZ>54 then local cc=aY[2]local cd,ce=aO(aV[cc](z(aV,cc+1,aY[3])))aQ=ce+cc-1;local cf=0;for cg=cc,aQ do cf=cf+1;aV[cg]=cd[cf]end else aV[aY[2]]=aY[3]end elseif aZ<=76-(10+8)then if aZ<=56 then aV[aY[7-5]]=aV[aY[445-(416+26)]]elseif aZ==57 then local ch=aY[2]aV[ch](z(aV,ch+1,aY[3]))else local ci=aY[2]local cj=aV[ci]local ck=aV[ci+6-4]if ck>0 then if cj>aV[ci+1]then aP=aY[2+1]else aV[ci+3]=cj end elseif cj<aV[ci+1]then aP=aY[3]else aV[ci+4-1]=cj end end elseif aZ<=59 then aV[aY[2]]=aV[aY[3]]%aV[aY[4]]elseif aZ==498-(145+293)then local cl=0;local cm;while true do if cl==0 then cm=aY[2]aV[cm](aV[cm+1])break end end else local cn=0;local co;local cp;local cq;while true do if cn==2 then for cr=1,aY[4]do aP=aP+1;local cs=aL[aP]if cs[1]==51 then cq[cr-1]={aV,cs[3]}else cq[cr-1]={aF,cs[3]}end;aU[#aU+1]=cq end;aV[aY[2]]=aD(co,cp,aG)break end;if 0==cn then co=aM[aY[3]]cp=nil;cn=1 end;if cn==1 then cq={}cp=w({},{[h("\248\104\23\178\85\160\178","\43\167\55\126\220\49\197\202")]=function(ct,cu)local cv=cq[cu]return cv[1][cv[2]]end,[h("\44\59\201\193\9\26\10\195\193\6","\126\115\100\167\164")]=function(cw,cx,cy)local cz=cq[cx]cz[1][cz[2]]=cy end})cn=2 end end end elseif aZ<=67 then if aZ<=64 then if aZ<=62 then aV[aY[2]]=aV[aY[3]]%aY[1490-(998+488)]elseif aZ>63 then local cA=0;local cB;local cC;local cD;while true do if cA==2 then if cC>0 then if cD<=aV[cB+1]then local cE=0;while true do if cE==0 then aP=aY[3]aV[cB+3]=cD;break end end end elseif cD>=aV[cB+1]then aP=aY[3]aV[cB+3]=cD end;break end;if cA==1 then cD=aV[cB]+cC;aV[cB]=cD;cA=2 end;if cA==0 then cB=aY[2]cC=aV[cB+2]cA=1 end end elseif aV[aY[2]]then aP=aP+1 else aP=aY[3]end elseif aZ<=65 then if aV[aY[2]]<=aV[aY[4]]then aP=aP+1 else aP=aY[3]end elseif aZ>66 then local cF=aY[2]do return z(aV,cF,aQ)end else local cG=0;local cH;while true do if cG==0 then cH=aV[aY[4]]if cH then aP=aP+1 else local cI=0;while true do if cI==0 then aV[aY[2]]=cH;aP=aY[3]break end end end;break end end end elseif aZ<=70 then if aZ<=68 then local cJ=0;local cK;while true do if cJ==0 then cK=aY[2]aV[cK]=aV[cK](z(aV,cK+1,aY[3]))break end end elseif aZ>69 then local cL=aY[2]local cM=aY[2+2]local cN=cL+2;local cO={aV[cL](aV[cL+1],aV[cN])}for cP=1,cM do aV[cN+cP]=cO[cP]end;local cQ=cO[1]if cQ then local cR=0;while true do if cR==0 then aV[cN]=cQ;aP=aY[3]break end end else aP=aP+1 end else local cS=0;local cT;local cU;while true do if cS==0 then cT=aY[2]cU=aV[aY[3]]cS=1 end;if cS==1 then aV[cT+1]=cU;aV[cT]=cU[aY[4]]break end end end elseif aZ<=59+13 then if aZ>71 then aV[aY[2]]()else aV[aY[774-(201+571)]][aV[aY[3]]]=aY[4]end elseif aZ==73 then local cV=aY[2]local cW=aV[cV]for cX=cV+1,aQ do t(cW,aV[cX])end else aP=aY[3]end elseif aZ<=86 then if aZ<=80 then if aZ<=77 then if aZ<=75 then do return end elseif aZ>76 then aV[aY[1140-(116+1022)]][aV[aY[12-9]]]=aV[aY[4]]elseif aV[aY[2]]<=aV[aY[4]]then aP=aP+1 else aP=aY[3]end elseif aZ<=78 then aV[aY[2]]=aY[3]+aV[aY[4]]elseif aZ==79 then if aY[2]<aV[aY[4]]then aP=aP+1 else aP=aY[3]end else aV[aY[2]]=aV[aY[3]][aY[4]]end elseif aZ<=83 then if aZ<=81 then do return aV[aY[2]]()end elseif aZ==82 then aV[aY[2]]=aV[aY[3]][aV[aY[4]]]else local cY=aY[2]local cZ=aV[cY]local c_=aV[cY+2]if c_>0+0 then if cZ>aV[cY+1]then aP=aY[3]else aV[cY+10-7]=cZ end elseif cZ<aV[cY+1]then aP=aY[3]else aV[cY+3]=cZ end end elseif aZ<=84 then local d0=aY[2]local d1,d2=aO(aV[d0](z(aV,d0+3-2,aY[862-(814+45)])))aQ=d2+d0-1;local d3=0-0;for d4=d0,aQ do local d5=0;while true do if 0==d5 then d3=d3+1;aV[d4]=d1[d3]break end end end elseif aZ>85 then aV[aY[2]]=aV[aY[3]]%aY[4]else local d6=aY[2]local d7={aV[d6](aV[d6+1])}local d8=0;for d9=d6,aY[4]do local da=0;while true do if da==0 then d8=d8+1;aV[d9]=d7[d8]break end end end end elseif aZ<=92 then if aZ<=89 then if aZ<=5+82 then local db=aY[2]aV[db]=aV[db](z(aV,db+1,aY[3]))elseif aZ==88 then for dc=aY[1+1],aY[3]do aV[dc]=nil end else local dd=aY[2]aV[dd]=aV[dd]()end elseif aZ<=90 then do return end elseif aZ>91 then if not aV[aY[2]]then aP=aP+1 else aP=aY[3]end else aV[aY[887-(261+624)]]=aD(aM[aY[3]],nil,aG)end elseif aZ<=95 then if aZ<=93 then local de=0;local df;while true do if de==0 then df=aY[3-1]aV[df]=aV[df](z(aV,df+1,aQ))break end end elseif aZ==94 then aV[aY[2]]=aV[aY[3]][aY[4]]else local dg=aY[1083-(1020+60)]local dh=aV[dg]for di=dg+1,aY[4]do dh=dh..aV[di]end;aV[aY[2]]=dh end elseif aZ<=97 then if aZ>96 then if not aV[aY[2]]then aP=aP+1 else aP=aY[3]end elseif aV[aY[2]]==aY[4]then aP=aP+1424-(630+793)else aP=aY[3]end elseif aZ>98 then local dj=0;local dk;local dl;while true do if dj==0 then dk=aY[3]dl=aV[dk]dj=1 end;if dj==1 then for dm=dk+1,aY[13-9]do dl=dl..aV[dm]end;aV[aY[2]]=dl;break end end else local dn=0;local dp;local dq;local dr;while true do if 2==dn then if dq>0 then if dr<=aV[dp+1]then local ds=0;while true do if ds==0 then aP=aY[14-11]aV[dp+3]=dr;break end end end elseif dr>=aV[dp+1]then aP=aY[3]aV[dp+3]=dr end;break end;if dn==1 then dr=aV[dp]+dq;aV[dp]=dr;dn=2 end;if dn==0 then dp=aY[2]dq=aV[dp+2]dn=1 end end end;aP=aP+1 end end end end end;return aD(aj(),{},D)(...)endv(),...)
